WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance.
2022-02-24 17:58:08
Full thread dump Java HotSpot(TM) 64-Bit Server VM (11.0.13+10-LTS-370 mixed mode):

Threads class SMR info:
_java_thread_list=0x000001d8a94020f0, length=11, elements={
0x000001d88abb5800, 0x000001d8a893b800, 0x000001d8a8947000, 0x000001d8a8959000,
0x000001d8a8959800, 0x000001d8a895e000, 0x000001d8a8962800, 0x000001d8a8967800,
0x000001d8a8969000, 0x000001d8a9436000, 0x000001d8a9444000
}

"main" #1 prio=5 os_prio=0 cpu=828.13ms elapsed=0.88s tid=0x000001d88abb5800 nid=0x3614 runnable  [0x0000001a69afa000]
   java.lang.Thread.State: RUNNABLE
	at java.lang.invoke.InvokerBytecodeGenerator.isStaticallyNameable(java.base@11.0.13/InvokerBytecodeGenerator.java:977)
	at java.lang.invoke.InvokerBytecodeGenerator.emitReferenceCast(java.base@11.0.13/InvokerBytecodeGenerator.java:572)
	at java.lang.invoke.InvokerBytecodeGenerator.emitImplicitConversion(java.base@11.0.13/InvokerBytecodeGenerator.java:538)
	at java.lang.invoke.InvokerBytecodeGenerator.emitPushArgument(java.base@11.0.13/InvokerBytecodeGenerator.java:1615)
	at java.lang.invoke.InvokerBytecodeGenerator.emitPushArguments(java.base@11.0.13/InvokerBytecodeGenerator.java:1600)
	at java.lang.invoke.InvokerBytecodeGenerator.emitStaticInvoke(java.base@11.0.13/InvokerBytecodeGenerator.java:1026)
	at java.lang.invoke.InvokerBytecodeGenerator.addMethod(java.base@11.0.13/InvokerBytecodeGenerator.java:844)
	at java.lang.invoke.InvokerBytecodeGenerator.generateCustomizedCodeBytes(java.base@11.0.13/InvokerBytecodeGenerator.java:735)
	at java.lang.invoke.InvokerBytecodeGenerator.generateCustomizedCode(java.base@11.0.13/InvokerBytecodeGenerator.java:693)
	at java.lang.invoke.LambdaForm.compileToBytecode(java.base@11.0.13/LambdaForm.java:871)
	at java.lang.invoke.LambdaForm.prepare(java.base@11.0.13/LambdaForm.java:829)
	at java.lang.invoke.MethodHandle.<init>(java.base@11.0.13/MethodHandle.java:468)
	at java.lang.invoke.BoundMethodHandle.<init>(java.base@11.0.13/BoundMethodHandle.java:54)
	at java.lang.invoke.BoundMethodHandle$Species_LLL.<init>(java.base@11.0.13/java/lang/invoke/BoundMethodHandle$Species_LLL)
	at java.lang.invoke.BoundMethodHandle$Species_LLL.make(java.base@11.0.13/java/lang/invoke/BoundMethodHandle$Species_LLL)
	at java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(java.base@11.0.13/DirectMethodHandle$Holder)
	at java.lang.invoke.BoundMethodHandle$Species_LL.copyWithExtendL(java.base@11.0.13/java/lang/invoke/BoundMethodHandle$Species_LL)
	at java.lang.invoke.MethodHandles.foldArguments(java.base@11.0.13/MethodHandles.java:4328)
	at java.lang.invoke.StringConcatFactory$MethodHandleInlineCopyStrategy.generate(java.base@11.0.13/StringConcatFactory.java:1548)
	at java.lang.invoke.StringConcatFactory.generate(java.base@11.0.13/StringConcatFactory.java:756)
	at java.lang.invoke.StringConcatFactory.doStringConcat(java.base@11.0.13/StringConcatFactory.java:665)
	at java.lang.invoke.StringConcatFactory.makeConcatWithConstants(java.base@11.0.13/StringConcatFactory.java:581)
	at java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(java.base@11.0.13/DirectMethodHandle$Holder)
	at java.lang.invoke.DelegatingMethodHandle$Holder.delegate(java.base@11.0.13/DelegatingMethodHandle$Holder)
	at java.lang.invoke.Invokers$Holder.invokeExact_MT(java.base@11.0.13/Invokers$Holder)
	at java.lang.invoke.BootstrapMethodInvoker.invoke(java.base@11.0.13/BootstrapMethodInvoker.java:99)
	at java.lang.invoke.CallSite.makeSite(java.base@11.0.13/CallSite.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(java.base@11.0.13/MethodHandleNatives.java:258)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(java.base@11.0.13/MethodHandleNatives.java:248)
	at com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.decapitalize(java.management@11.0.13/DefaultMXBeanMappingFactory.java:1487)
	at com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.makeCompositeMapping(java.management@11.0.13/DefaultMXBeanMappingFactory.java:447)
	at com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.makeMapping(java.management@11.0.13/DefaultMXBeanMappingFactory.java:294)
	at com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.mappingForType(java.management@11.0.13/DefaultMXBeanMappingFactory.java:259)
	- locked <0x0000000088c0b8b8> (a com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory)
	at com.sun.jmx.mbeanserver.ConvertingMethod.<init>(java.management@11.0.13/ConvertingMethod.java:212)
	at com.sun.jmx.mbeanserver.ConvertingMethod.from(java.management@11.0.13/ConvertingMethod.java:41)
	at com.sun.jmx.mbeanserver.MXBeanIntrospector.mFrom(java.management@11.0.13/MXBeanIntrospector.java:84)
	at com.sun.jmx.mbeanserver.MXBeanIntrospector.mFrom(java.management@11.0.13/MXBeanIntrospector.java:54)
	at com.sun.jmx.mbeanserver.MBeanAnalyzer.initMaps(java.management@11.0.13/MBeanAnalyzer.java:137)
	at com.sun.jmx.mbeanserver.MBeanAnalyzer.<init>(java.management@11.0.13/MBeanAnalyzer.java:118)
	at com.sun.jmx.mbeanserver.MBeanAnalyzer.analyzer(java.management@11.0.13/MBeanAnalyzer.java:102)
	at com.sun.jmx.mbeanserver.MXBeanIntrospector.getAnalyzer(java.management@11.0.13/MXBeanIntrospector.java:74)
	at com.sun.jmx.mbeanserver.MBeanIntrospector.getPerInterface(java.management@11.0.13/MBeanIntrospector.java:192)
	- locked <0x0000000088c01158> (a com.sun.jmx.mbeanserver.MBeanIntrospector$PerInterfaceMap)
	at com.sun.jmx.mbeanserver.MBeanSupport.<init>(java.management@11.0.13/MBeanSupport.java:138)
	at com.sun.jmx.mbeanserver.MXBeanSupport.<init>(java.management@11.0.13/MXBeanSupport.java:66)
	at javax.management.StandardMBean.construct(java.management@11.0.13/StandardMBean.java:175)
	at javax.management.StandardMBean.<init>(java.management@11.0.13/StandardMBean.java:269)
	at java.lang.management.ManagementFactory.lambda$addMXBean$7(java.management@11.0.13/ManagementFactory.java:898)
	at java.lang.management.ManagementFactory$$Lambda$48/0x0000000100123c40.run(java.management@11.0.13/Unknown Source)
	at java.security.AccessController.doPrivileged(java.base@11.0.13/Native Method)
	at java.lang.management.ManagementFactory.addMXBean(java.management@11.0.13/ManagementFactory.java:891)
	at java.lang.management.ManagementFactory.lambda$getPlatformMBeanServer$1(java.management@11.0.13/ManagementFactory.java:488)
	at java.lang.management.ManagementFactory$$Lambda$47/0x0000000100123840.accept(java.management@11.0.13/Unknown Source)
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(java.base@11.0.13/ForEachOps.java:183)
	at java.util.Collections$2.tryAdvance(java.base@11.0.13/Collections.java:4747)
	at java.util.Collections$2.forEachRemaining(java.base@11.0.13/Collections.java:4755)
	at java.util.stream.ReferencePipeline$Head.forEach(java.base@11.0.13/ReferencePipeline.java:658)
	at java.util.stream.ReferencePipeline$7$1.accept(java.base@11.0.13/ReferencePipeline.java:274)
	at java.util.stream.ReferencePipeline$2$1.accept(java.base@11.0.13/ReferencePipeline.java:177)
	at java.util.HashMap$ValueSpliterator.forEachRemaining(java.base@11.0.13/HashMap.java:1692)
	at java.util.stream.AbstractPipeline.copyInto(java.base@11.0.13/AbstractPipeline.java:484)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(java.base@11.0.13/AbstractPipeline.java:474)
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(java.base@11.0.13/ForEachOps.java:150)
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(java.base@11.0.13/ForEachOps.java:173)
	at java.util.stream.AbstractPipeline.evaluate(java.base@11.0.13/AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.forEach(java.base@11.0.13/ReferencePipeline.java:497)
	at java.lang.management.ManagementFactory.getPlatformMBeanServer(java.management@11.0.13/ManagementFactory.java:488)
	- locked <0x00000000896de7b0> (a java.lang.Class for java.lang.management.ManagementFactory)
	at org.apache.logging.log4j.core.jmx.Server.reregisterMBeansAfterReconfigure(Server.java:140)
	at org.apache.logging.log4j.core.LoggerContext.setConfiguration(LoggerContext.java:629)
	at org.apache.logging.log4j.core.LoggerContext.start(LoggerContext.java:295)
	at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:207)
	at org.apache.logging.log4j.core.config.Configurator.initialize(Configurator.java:221)
	at org.apache.logging.log4j.core.config.Configurator.initialize(Configurator.java:197)
	at org.robotframework.remoteserver.RemoteServer.configureLogging(RemoteServer.java:253)
	at com.github.rainmanwy.robotframework.sikulilib.SikuliLibrary.main(SikuliLibrary.java:27)

"Reference Handler" #2 daemon prio=10 os_prio=2 cpu=0.00ms elapsed=0.84s tid=0x000001d8a893b800 nid=0x24b4 waiting on condition  [0x0000001a6a1ff000]
   java.lang.Thread.State: RUNNABLE
	at java.lang.ref.Reference.waitForReferencePendingList(java.base@11.0.13/Native Method)
	at java.lang.ref.Reference.processPendingReferences(java.base@11.0.13/Reference.java:241)
	at java.lang.ref.Reference$ReferenceHandler.run(java.base@11.0.13/Reference.java:213)

"Finalizer" #3 daemon prio=8 os_prio=1 cpu=0.00ms elapsed=0.84s tid=0x000001d8a8947000 nid=0x1cd8 in Object.wait()  [0x0000001a6a2ff000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(java.base@11.0.13/Native Method)
	- waiting on <0x0000000089908fa8> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(java.base@11.0.13/ReferenceQueue.java:155)
	- waiting to re-lock in wait() <0x0000000089908fa8> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(java.base@11.0.13/ReferenceQueue.java:176)
	at java.lang.ref.Finalizer$FinalizerThread.run(java.base@11.0.13/Finalizer.java:170)

"Signal Dispatcher" #4 daemon prio=9 os_prio=2 cpu=0.00ms elapsed=0.81s tid=0x000001d8a8959000 nid=0x4228 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"Attach Listener" #5 daemon prio=5 os_prio=2 cpu=0.00ms elapsed=0.81s tid=0x000001d8a8959800 nid=0x114 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"Service Thread" #6 daemon prio=9 os_prio=0 cpu=0.00ms elapsed=0.81s tid=0x000001d8a895e000 nid=0x2ed8 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"C2 CompilerThread0" #7 daemon prio=9 os_prio=2 cpu=187.50ms elapsed=0.81s tid=0x000001d8a8962800 nid=0x44dc runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE
   Compiling:  907       4       java.util.HashMap::putVal (300 bytes)

"C1 CompilerThread0" #9 daemon prio=9 os_prio=2 cpu=375.00ms elapsed=0.81s tid=0x000001d8a8967800 nid=0x25d8 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE
   Compiling:  913       3       jdk.internal.org.objectweb.asm.Frame::type (416 bytes)

"Sweeper thread" #10 daemon prio=9 os_prio=2 cpu=0.00ms elapsed=0.81s tid=0x000001d8a8969000 nid=0xf88 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"Common-Cleaner" #11 daemon prio=8 os_prio=1 cpu=0.00ms elapsed=0.76s tid=0x000001d8a9436000 nid=0x3700 in Object.wait()  [0x0000001a6aafe000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(java.base@11.0.13/Native Method)
	- waiting on <0x0000000089810658> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(java.base@11.0.13/ReferenceQueue.java:155)
	- waiting to re-lock in wait() <0x0000000089810658> (a java.lang.ref.ReferenceQueue$Lock)
	at jdk.internal.ref.CleanerImpl.run(java.base@11.0.13/CleanerImpl.java:148)
	at java.lang.Thread.run(java.base@11.0.13/Thread.java:834)
	at jdk.internal.misc.InnocuousThread.run(java.base@11.0.13/InnocuousThread.java:134)

"C2 CompilerThread1" #8 daemon prio=9 os_prio=2 cpu=187.50ms elapsed=0.72s tid=0x000001d8a9444000 nid=0x49d4 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE
   No compile task

"VM Thread" os_prio=2 cpu=0.00ms elapsed=0.85s tid=0x000001d8a8917000 nid=0x3fe4 runnable  

"GC Thread#0" os_prio=2 cpu=0.00ms elapsed=0.88s tid=0x000001d88abca800 nid=0x2e24 runnable  

"G1 Main Marker" os_prio=2 cpu=0.00ms elapsed=0.88s tid=0x000001d88abfb000 nid=0x1d38 runnable  

"G1 Conc#0" os_prio=2 cpu=0.00ms elapsed=0.88s tid=0x000001d88abfc800 nid=0x23c4 runnable  

"G1 Refine#0" os_prio=2 cpu=0.00ms elapsed=0.87s tid=0x000001d88ac8f000 nid=0x3a34 runnable  

"G1 Young RemSet Sampling" os_prio=2 cpu=0.00ms elapsed=0.87s tid=0x000001d88ac90000 nid=0x3f78 runnable  
"VM Periodic Task Thread" os_prio=2 cpu=0.00ms elapsed=0.76s tid=0x000001d8a9435000 nid=0x2b20 waiting on condition  

JNI global refs: 13, weak refs: 0

Heap
 garbage-first heap   total 131072K, used 17408K [0x0000000081a00000, 0x0000000100000000)
  region size 1024K, 14 young (14336K), 0 survivors (0K)
 Metaspace       used 13132K, capacity 13403K, committed 13568K, reserved 1060864K
  class space    used 1373K, capacity 1488K, committed 1536K, reserved 1048576K

17:58:08.255 [main] INFO  org.eclipse.jetty.util.log - Logging initialized @1092ms to org.robotframework.remoteserver.logging.Jetty2Log4J
17:58:08.415 [main] INFO  org.eclipse.jetty.server.Server - jetty-9.4.31.v20200723; built: 2020-07-23T17:57:36.812Z; git: 450ba27947e13e66baa8cd1ce7e85a4461cacc1d; jvm 11.0.13+10-LTS-370
17:58:08.527 [main] INFO  org.eclipse.jetty.server.handler.ContextHandler - Started o.e.j.s.ServletContextHandler@1046d517{/,null,AVAILABLE}
17:58:09.043 [main] INFO  org.eclipse.jetty.server.AbstractConnector - Started ServerConnector@e3b3b2f{HTTP/1.1, (http/1.1)}{0.0.0.0:60458}
17:58:09.044 [main] INFO  org.eclipse.jetty.server.Server - Started @1887ms
